// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DB_URL")
}

enum Languages {
  English
  Hindi
  Spanish
  French
  // Add more languages here
}

enum TimeZones {
  IST
  EST
  CST
  PST
  UTC
  // Add more timezones here
}

enum Difficulty {
  Basic
  Beginner
  Intermediate
  Advanced
}

enum Layout {
  BoxLayout
  LineLayout
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  username  String   @unique
  password  String
  verified  Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([email, username, id])
  @@map("users")
}

model Otp {
  id        String   @id @default(cuid())
  email     String   @unique
  otp       Int
  createdAt DateTime @default(now())

  @@index([id, email])
  @@map("otps")
}

model Admin {
  id        String   @id @default(cuid())
  email     String   @unique
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([email, id])
  @@map("admins")
}

model AdminSettings {
  id                      String    @id @default(cuid())
  siteTitle               String
  metaDescription         String
  logoImage               String?
  defaultLanguage         Languages @default(English)
  defaultTimeZone         TimeZones @default(UTC)
  useSEOFriendlyUrls      Boolean   @default(true)
  discourageSearchEngines Boolean   @default(false)
  maintainenceMode        Boolean   @default(false)
  maintainenceMessage     String?
  euCookieNotification    Boolean   @default(false)
  analyticsTrackingCode   String?
  createdAt               DateTime  @default(now())
  updatedAt               DateTime  @updatedAt

  @@index([id])
  @@map("admin_settings")
}

model PracticeTest {
  id          String     @id @default(cuid())
  title       String
  description String
  difficulty  Difficulty
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  Chapter     Chapter[]

  @@index([id])
  @@map("lessons")
}

model Chapter {
  id             String       @id @default(cuid())
  content        String
  layout         Layout
  practiceTest   PracticeTest @relation(fields: [practiceTestId], references: [id])
  practiceTestId String
  createdAt      DateTime     @default(now())
  updatedAt      DateTime     @updatedAt

  @@index([id])
  @@map("chapters")
}
